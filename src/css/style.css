html,body,div,section,aside,figure,span,applet,object,iframe,h1,b,span,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,img,ins,kbd,q,s,samp,small,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:transparent;text-decoration:none}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outline:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}.clearfix{*zoom:1}.clearfix:before,.clearfix:after{display:block;content:"";line-height:0}.clearfix:after{clear:both}input,input[type="text"],input[type="password"],select:focus{font-size:16px !important}.flex1{flex:1}.flex2{flex:2}.flex3{flex:3}.flex4{flex:4}.flex5{flex:5}html{touch-action:manipulation}html body{font-family:"Microsoft JhengHei", "Helvetica Neue", Helvetica, Arial, sans-serif;touch-action:manipulation;overflow-x:hidden}html body h1,html body b,html body span{color:red}p:after{content:"1serif";margin:6rem auto;color:#f50}h1,b,span{font-size:10rem}span{font-size:2rem}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
